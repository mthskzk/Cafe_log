<h2>検索結果:<%= @area %></h2>
<!--<h2><--%= @lat %>  <--%= @lag %></h2>-->
<div id='map'></div>

<style>
  #map{
    height: 500px;
  }
</style>

<script>
  let map;
  let marker = []; // マーカーを複数表示させたいので、配列化
  let infoWindow = []; // 吹き出しを複数表示させたいので、配列化
  const cafes = gon.caves; // コントローラーで定義したインスタンス変数を変数に代入
  console.log(cafes)

  function initMap(){
    // 現在位置の特定
    //navigator.geolocation.getCurrentPosition(function (position){
      // LatLngに位置座標を代入
       LatLng = new google.maps.LatLng(gon.lat,gon.lag);

      // mapの初期位置設定
      map = new google.maps.Map(document.getElementById('map'), {
        center: LatLng,
        zoom: gon.zoom
      });
      // forは繰り返し処理
      // 変数iを0と定義し、
      // その後gonで定義したcafes分繰り返し加える処理を行う
      for (let i = 0; i < cafes.length; i++){
        // cafes[i]は変数iのユーザーを取得している
        marker[i] = new google.maps.Marker({
          map: map,
          position: {
            // DBに保存してある、緯度・経度を呼び出す
            lat: cafes[i].latitude,
            lng: cafes[i].longitude
          }
        });

        // 変数iを変数idに代入
        let id = cafes[i]['id']

        // infoWindowは吹き出し
        infoWindow[i] = new google.maps.InfoWindow({
          // contentで中身を指定
          // 今回は文字にリンクを貼り付けた形で表示
          content: `<a href='/caves/${id}'>${cafes[i].name}</a>`
        });
        // markerがクリックされた時、
        marker[i].addListener("click", function(){
          // infoWindowを表示
          infoWindow[i].open(map, marker[i]);
        });
      }
    //});
  }
</script>

 <script async defer
      src="https://maps.googleapis.com/maps/api/js?v=3.exp&key=<%= ENV['GOOGLE_MAP_API'] %>&callback=initMap">
</script>